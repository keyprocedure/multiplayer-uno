<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title><%= title %></title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f8f9fa;
        }
        .card {
            display: inline-block;
            padding: 8px 16px;
            margin: 4px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-weight: bold;
            cursor: pointer;
        }
        .red { background-color: #ffcccc; color: #990000; }
        .yellow { background-color: #ffffcc; color: #999900; }
        .green { background-color: #ccffcc; color: #009900; }
        .blue { background-color: #ccccff; color: #000099; }
        .wild { background-color: #ddd; color: #000; }
    </style>
</head>
<body>
<h1>Uno Game</h1>
<p>Game ID: <%= gameId %></p>

<script>
const gameId = <%- JSON.stringify(gameId) %>;
console.log("gameId: ", gameId);
const currentPlayerId = <%- JSON.stringify(currentPlayerId) %>;
console.log("currentPlayerId: ", currentPlayerId);
</script>

<div>
    <h2>Other Players</h2>
    <div style="display: flex; justify-content: center; gap: 16px;">
        <% for (let i = 0; i < gameState.players.length; i++) { %>
            <% if (gameState.players[i].id !== currentPlayerId) { %>
                <div>
                    <p>
                        Player <%= gameState.players[i].id %>
                        (<%= gameState.players[i].hand.length %> cards)
                    </p>
                </div>
            <% } %>
        <% } %>
    </div>
</div>

<!-- top card -->
<div style="margin: 24px 0;">
    <h2>Top Card</h2>
    <% if (gameState.discardPile.length > 0) { %>
        <% const topCard = gameState.discardPile[gameState.discardPile.length - 1]; %>
        <div id="top-card" class="card <%= topCard.color %>">
            <%= topCard.color %> <%= topCard.value %>
        </div>
    <% } else { %>
        <div id="top-card" class="card">No Cards</div>
    <% } %>
    <br/>
    <button id="draw-card-btn" class="card wild">Draw Card</button>
</div>

<!-- current hand -->
<div>
    <h2>Your Cards</h2>
    <div id="player-cards">
        <% const currentPlayer = gameState.players.find(player => player.id === currentPlayerId); %>
        <% if (currentPlayer) { %>
            <% currentPlayer.hand.forEach(card => { %>
                <div class="card <%= card.color %>" data-color="<%= card.color %>" data-value="<%= card.value %>">
                    <%= card.color %> <%= card.value %>
                </div>
            <% }); %>
        <% } else { %>
            <p>No cards available</p>
        <% } %>
    </div>
</div>

<%- include('./partials/chat.ejs', { roomId: roomId }) %>
<%- include('./partials/footer.ejs') %>




<script>
    document.getElementById("player-cards").addEventListener("click", (e) => {
        const cardElement = e.target.closest(".card");
        if (cardElement) {
            const color = cardElement.dataset.color;
            const value = cardElement.dataset.value;

            console.log("Attempting to play card:", { color, value });
            cardElement.style.opacity = "0.0";
            cardElement.style.pointerEvents = "none";

            fetch(`/games/${gameId}/play-card`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ playerId: currentPlayerId, card: { color, value } })
            })
                .then(async (response) => {
                    console.log("Server responded with status:", response.status);
                    const data = await response.json();
                    console.log("Server responded with data:", data);
                    return data;
                })
                .then(data => {
                    if (!data.success) {
                        console.error("Invalid card play:", data.message);
                        cardElement.style.opacity = "1";
                        cardElement.style.pointerEvents = "auto";
                        console.log(data.message || "Invalid card play.");
                    } else {
                        console.log("Card played successfully.");
                        cardElement.remove();
                    }
                })
                .catch(error => {
                    console.error("Error playing card:", error);
                    console.log("An error occurred while playing the card.");
                    cardElement.style.opacity = "1";
                    cardElement.style.pointerEvents = "auto";
                });
        }
    });

    document.getElementById("draw-card-btn").addEventListener("click", () => {
        fetch(`/games/${gameId}/draw-card`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ playerId: currentPlayerId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log("Card drawn successfully!");
                } else {
                    console.log(data.message || "Failed to draw card.");
                }
            });
    });
</script>




<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    socket.emit("join-game", gameId);

    socket.on("error", (data) => {
        console.log("Received error event:", data);
        if (data.playerId === currentPlayerId) {
            console.log(data.message || "An error occurred.");

            const cardElement = document.querySelector(
                `.card[data-color="${data.card.color}"][data-value="${data.card.value}"]`
            );
            if (cardElement) {
                cardElement.style.opacity = "1";
                cardElement.style.pointerEvents = "auto";
            }
        }
    });

    socket.on("game-state", (updatedState) => {
        console.log("Received updated game state:", updatedState);
        updatePlayerCards(updatedState);
        updateOtherPlayers(updatedState);
        updateTopCard(updatedState);
    });

    function updatePlayerCards(gameState) {
        const currentPlayer = gameState.players.find(player => player.id === currentPlayerId);
        const playerCardsContainer = document.getElementById("player-cards");

        playerCardsContainer.innerHTML = "";

        if (currentPlayer) {
            currentPlayer.hand.forEach(card => {
                const cardElement = document.createElement("div");
                cardElement.className = `card ${card.color}`;
                cardElement.dataset.color = card.color;
                cardElement.dataset.value = card.value;
                cardElement.textContent = `${card.color} ${card.value}`;
                playerCardsContainer.appendChild(cardElement);
            });
        }
    }

    function updateOtherPlayers(gameState) {
        const otherPlayersContainer = document.querySelector("div > h2 + div");
        otherPlayersContainer.innerHTML = "";

        gameState.players.forEach(player => {
            if (player.id !== currentPlayerId) {
                const playerElement = document.createElement("div");
                playerElement.innerHTML = `
                    <p>Player ${player.id} (${player.hand.length} cards)</p>
                `;
                otherPlayersContainer.appendChild(playerElement);
            }
        });
    }

    function updateTopCard(gameState) {
        const topCardContainer = document.getElementById("top-card");
        if (gameState.discardPile.length > 0) {
            const topCard = gameState.discardPile[gameState.discardPile.length - 1];
            topCardContainer.className = `card ${topCard.color}`;
            topCardContainer.textContent = `${topCard.color} ${topCard.value}`;
        } else {
            topCardContainer.className = "card";
            topCardContainer.textContent = "No Cards";
        }
    }
</script>



</body>
</html>























<!--- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title><%= title %></title>
</head>
<body>
Games page for game <%= gameId %>

<div>
    <form id="blarg" action="/games/do-a-thing/<%= gameId %>" method="post">
        <button class="bg-blue-200 rounded-sm px-1 border-[1px] border-blue-800">Do a thing</button>
    </form>
</div>

<div class="grid grid-cols-4 gap-6 p-8">
    <div class="col-span-3 grid grid-rows-5 gap-4">
        <div style="display: flex; gap: 16px;">
            <div class="flex justify-center items-center bg-gray-700 rounded p-4">
                <p class="text-xl">Player 2</p>
                <span class="text-sm text-gray-300" style="margin-left: 8px;">(3 cards)</span>
            </div>
            <div class="flex justify-center items-center bg-gray-700 rounded p-4">
                <p class="text-xl">Player 3</p>
                <span class="text-sm text-gray-300" style="margin-left: 8px;">(5 cards)</span>
            </div>
            <div class="flex justify-center items-center bg-gray-700 rounded p-4">
                <p class="text-xl">Player 4</p>
                <span class="text-sm text-gray-300" style="margin-left: 8px;">(2 cards)</span>
            </div>
        </div>

        <div class="flex flex-col items-center bg-gray-800 rounded p-4">
            <p class="mb-4 text-xl">Top Card</p>
            <div id="top-card" class="bg-yellow-400 text-black font-bold rounded-lg w-20 h-28 flex items-center justify-center">
            </div>
            <button class="bg-blue-500 text-white px-6 py-2 mt-4 rounded">
                Draw Card
            </button>
        </div>
        <div class="bg-gray-800 rounded p-4">
            <p class="text-xl mb-4 text-center">Your Cards</p>
            <div id="player-cards" class="flex flex-wrap gap-2 justify-center">


            </div>
        </div>
    </div>
</div>

<%- include('./partials/chat.ejs', { roomId: roomId }) %>
<%- include('./partials/footer.ejs') %>

<script src="/js/games.js"></script>

</body>
</html>

-->